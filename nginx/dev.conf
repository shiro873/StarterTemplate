http {
  upstream api_golang {
    server api_golang:8000;
  }

  upstream api_nodejs {
    server api_nodejs:6000;
  }

  upstream api_nest {
    server api_nest:7000;
  }

  upstream webapp_react {
    server webapp_react:3000;
  }

  upstream webapp_nest {
    server webapp_nest:3001;
  }

  server {
    listen 80;

    location /api/golang/ {
      proxy_cache cache_golang;
      proxy_cache_key $uri?query_string;
      proxy_cache_valid 30m;
      proxy_pass http://api_golang;

      # Load balancing options (choose one)
      # 1. Round robin
      proxy_load_balancer round_robin;

      # 2. Least connections
      # proxy_load_balancer least_conn;
    }

    location /api/nodejs/ {
      proxy_cache cache_nodejs;
      proxy_cache_key $uri?query_string;
      proxy_cache_valid 30m;
      proxy_pass http://api_nodejs;

      # Load balancing options (choose one)
      # 1. Round robin
      proxy_load_balancer round_robin;

      # 2. Least connections
      # proxy_load_balancer least_conn;
    }

    location /api/nest/ {
      proxy_cache cache_nest;
      proxy_cache_key $uri?query_string;
      proxy_cache_valid 30m;
      proxy_pass http://api_nest;

      # Load balancing options (choose one)
      # 1. Round robin
      proxy_load_balancer round_robin;

      # 2. Least connections
      # proxy_load_balancer least_conn;
    }

    location / {
      proxy_pass http://webapp_react;
    }

    location /nest/ {
      proxy_pass http://webapp_nest;
    }
  }

  # Additional server blocks for other web applications if needed

  proxy_cache_path /var/cache/nginx;
}

upstream redis {
  server redis:6379;
}

stream {
  server {
    listen 6379;
    proxy_pass redis;
  }
}

upstream mongodb {
  server mongo:27017;
}

upstream mysql {
  server mysql:3306;
}

upstream postgres {
  server postgres:5432;
}

